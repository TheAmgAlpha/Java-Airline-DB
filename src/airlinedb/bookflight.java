/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airlinedb;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author theam
 */
public class bookflight extends javax.swing.JFrame {

    String loggedUname = null;
    String loggedUid = null;

    /**
     * Creates new form bookflight
     */
    public bookflight() {
        initComponents();
    }

    public void OnStart(String uid, String name) {
        loggedUname = name;
        loggedUid = uid;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        depdatelab = new javax.swing.JLabel();
        deptimelab = new javax.swing.JLabel();
        aridatelab = new javax.swing.JLabel();
        aritimelab = new javax.swing.JLabel();
        avseatslab = new javax.swing.JLabel();
        costlab = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        statuslab = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sourcecb = new javax.swing.JComboBox<>();
        destcb = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        foptcb = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        depdatelab.setText("Departure date");

        deptimelab.setText("Departure time");

        aridatelab.setText("Arrival at destination date");

        aritimelab.setText("Arrival at destination time");

        avseatslab.setText("Available seats");

        costlab.setText("cost");

        jPanel6.setBackground(new java.awt.Color(0, 102, 204));
        jPanel6.setToolTipText("");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("         BOOK ");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(avseatslab)
                            .addComponent(costlab))
                        .addGap(53, 53, 53))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(depdatelab)
                            .addComponent(deptimelab))
                        .addGap(51, 51, 51))
                    .addComponent(aridatelab)
                    .addComponent(aritimelab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 380, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(statuslab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(depdatelab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deptimelab))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(aridatelab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aritimelab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(avseatslab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(costlab))
                    .addComponent(statuslab, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 640, 140));

        jLabel3.setText("Select departure location");

        jLabel4.setText("select destination");

        sourcecb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bangalore", "Delhi", "Hydrabad" }));
        sourcecb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        destcb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bangalore", "Delhi", "Hydrabad" }));
        destcb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel3.setBackground(new java.awt.Color(0, 102, 204));
        jPanel3.setToolTipText("");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("          CHECK");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CFIA(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jSeparator1.setBackground(new java.awt.Color(0, 102, 204));
        jSeparator1.setForeground(new java.awt.Color(0, 102, 204));

        jLabel6.setText("List of flight options");

        foptcb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel4.setBackground(new java.awt.Color(0, 102, 204));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("          SELECT");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selMCLK(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(0,0,0,120));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(foptcb, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(sourcecb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(destcb, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 224, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sourcecb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(destcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(foptcb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 640, 130));

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.setToolTipText("");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("   <  BACK");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 562, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/airlinedb/bookflightimg.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 640, 300));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        CustomerMenu cm = new CustomerMenu();
        cm.OnStart(loggedUid, loggedUname);
        cm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void CFIA(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CFIA
        // TODO add your handling code here:
        String src = sourcecb.getSelectedItem().toString();
        String dest = destcb.getSelectedItem().toString();
        
        String[] tripids = null;
        int c = 0;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");            
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/airdb", "root", "");            
            
            Statement stmt = con.createStatement();
            Statement stmt1 = con.createStatement();
            String sql = "select tripID from flighttimings where arrivalTo='" + src + "' and departsToNext='" + dest + "'";
            String sql1 = "select count(*) from flighttimings where arrivalTo='" + src + "' and departsToNext='" + dest + "'";
            ResultSet rs = stmt.executeQuery(sql);
            ResultSet rs1 = stmt1.executeQuery(sql1);
            if (rs1.next()) {
                int len = rs1.getInt(1);
                tripids = new String[len];
            }
            while (rs.next()) {
                tripids[c] = rs.getString(1);
                c++;
            }
            foptcb.setModel(new DefaultComboBoxModel<>(tripids));
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error " + e);
        }
        

    }//GEN-LAST:event_CFIA

    private void selMCLK(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selMCLK
        // TODO add your handling code here:
        String tripid = foptcb.getSelectedItem().toString();
        int tval = Integer.parseInt(tripid);
        
        if (tval < 1) {
            statuslab.setText("Please select a valid flight option");
        } else {
            
            try {
                Class.forName("com.mysql.jdbc.Driver");                
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/airdb", "root", "");                
                Statement stmt = con.createStatement();
                String sql = "select * from flighttimings where tripID='" + tripid + "'";
                ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                    String ddate = rs.getString(4);
                    String dtime = rs.getString(3);
                    String adate = rs.getString(7);
                    String atime = rs.getString(6);
                    int occseats = rs.getInt(9);
                    int cost = 10;
                    int maxseats = getMaxSeatsFromTrip(tripid);
                    
                    int avseats = maxseats - occseats;
                    
                    depdatelab.setText("Departure date: " + ddate);
                    deptimelab.setText("Departure time: " + dtime);
                    aridatelab.setText("Arrival to destination date: " + adate);
                    aritimelab.setText("Arrival to destination time: " + atime);
                    costlab.setText("cost: " + cost);
                    avseatslab.setText("Available Seats: " + avseats);
                } else {
                    statuslab.setText("Unable to find flight data");
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error " + e);
            }
            
        }
        

    }//GEN-LAST:event_selMCLK
    private int getoccseats(String tripid){
        int oc=0;
        try {
                Class.forName("com.mysql.jdbc.Driver");                
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/airdb", "root", "");                
                Statement stmt = con.createStatement();
                String sql = "select occseats from flighttimings where tripID='" + tripid + "'";
                 ResultSet rs = stmt.executeQuery(sql);
                if (rs.next()) {
                  oc=rs.getInt(1);
                }else{
                  oc=0;
        }
        }catch(Exception e){
            
        }
       return oc;
    }
    private int genSeatNo(int maxval, String tripid){
        int sno=0;
        int excep[]=null;
        try {
                Class.forName("com.mysql.jdbc.Driver");                
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/airdb", "root", "");                
                Statement stmt = con.createStatement();
                Statement stmt1 = con.createStatement();
                String sql="select count(*) from reserve where tripID='"+tripid+"'";
                String sql1="select seatno from reserve where tripID='"+tripid+"'";
                ResultSet rs=stmt.executeQuery(sql);
                if(rs.next()){
                    int len=rs.getInt(1);
                    excep=new int[len];
                    
                }else{
                    JOptionPane.showMessageDialog(null,"Error");
                    
                }
                int cntr=0;
                ResultSet rs1=stmt1.executeQuery(sql1);
                while(rs.next()){
                    excep[cntr]=rs1.getInt(1);
                    cntr++;
                }
                sno=randomGen(excep,maxval);
                
                
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error"+e);
        }
        
        return sno;
    }
    private int randomGen(int[] exc,int maxval){
        int res=0;
        Random rnd=new Random();
        res=rnd.nextInt(maxval);
        for(int i=0;i<exc.length;i++){
            if(res==exc[i]){
                randomGen(exc,maxval);
            }
            if(i==exc.length-1){
                
            }
        }
        return res;
    }
    private String getPidfromTid(String tripid){
        String ans=null;
        try {
                Class.forName("com.mysql.jdbc.Driver");                
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/airdb", "root", "");                
                Statement stmt = con.createStatement();
                String sql="select pid from flighttimings where tripID='"+tripid+"'";
                
                ResultSet rs=stmt.executeQuery(sql);
                if(rs.next()){
                    ans=rs.getString(1);
                }else{
                    statuslab.setText("Unable to get plane_id");
                }
        }catch(Exception e){
            
        }
        return ans;
    }
    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        //insert into reserve if not already+update occ seats
        String tripid = foptcb.getSelectedItem().toString();
        int tval = Integer.parseInt(tripid);
        int maxseats=getMaxSeatsFromTrip(tripid);
        int ocs=getoccseats(tripid);
        int sno=genSeatNo(maxseats,tripid);
        int pid=Integer.parseInt(getPidfromTid(tripid));
       // JOptionPane.showMessageDialog(null, "pid " + pid);
        String src = sourcecb.getSelectedItem().toString();
        String dest = destcb.getSelectedItem().toString();
        int cost=10;
        String tt="O";
        int os2=ocs+1;
        if (tval < 1) {
            statuslab.setText("Please select a valid flight option");
        } else {
            
            try {
                Class.forName("com.mysql.jdbc.Driver");                
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/airdb", "root", "");                
                Statement stmt = con.createStatement();
                Statement stmt1=con.createStatement();
                
               
                String sql="insert into reserve(cid,seatno,plane_id,startPt,EndPt,cost,Triptype,tripID) values('"+loggedUid+"','"+sno+"','"+pid+"','"+src+"','"+dest+"','"+cost+"','"+tt+"','"+tripid+"')";
                if (isNotEnt(tripid)) {
                    stmt.executeUpdate(sql);
                    updateOC(tripid,os2);
                   // JOptionPane.showMessageDialog(null, "Done ");
                    
                } else {
                    statuslab.setText("Already entered, can't take another seat");
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error " + e);
            }
            
        }        
    }//GEN-LAST:event_jLabel9MouseClicked
    private void updateOC(String tripid,int ocs){
      
        try{
            Class.forName("com.mysql.jdbc.Driver");                
                Connection con = DriverManager.getConnection(
                        "jdbc:mysql://localhost:3306/airdb", "root", "");                
                Statement stmt = con.createStatement();
                 String sql1="update flighttimings set occseats='"+ocs+"' where tripID='"+tripid+"'";
                 stmt.executeUpdate(sql1);
                
        }catch(Exception e){
            
        }
    }
    
    private boolean isNotEnt(String tripid) {
        boolean res = false;
        try {
            Class.forName("com.mysql.jdbc.Driver");            
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/airdb", "root", "");            
            Statement stmt = con.createStatement();
            String sql = "select * from reserve where tripID='" + tripid + "' and cid='" + loggedUid + "'";
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next()) {
                res = false;
            } else {
                res = true;
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error " + e);
        }
        
        return res;
    }
    
    private int getMaxSeatsFromTrip(String tripid) {
        int maxs = 0;
        String pid = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");            
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/airdb", "root", "");            
            Statement stmt = con.createStatement();
            String sql = "select pid from flighttimings where tripID='" + tripid + "'";
            
            Statement stmt1 = con.createStatement();
            
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next()) {
                pid = rs.getString(1);
                
                maxs = getMAXSfor(pid);
                
            } else {
                statuslab.setText("Unable to find plane from trip");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "error " + e);
        }
        return maxs;
        
    }

    public int getMAXSfor(String pid) {
        int m = 0;
        try {
            Class.forName("com.mysql.jdbc.Driver");            
            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/airdb", "root", "");            
            Statement stmt = con.createStatement();
            String sql = "select noSeats from plane where pid='" + pid + "'";
            ResultSet rs = stmt.executeQuery(sql);
            if (rs.next()) {
                m = rs.getInt(1);
            } else {
                statuslab.setText("Can't get max seats from pid");
            }
            
        } catch (Exception e) {
            
        }
        return m;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bookflight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bookflight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bookflight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bookflight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bookflight().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aridatelab;
    private javax.swing.JLabel aritimelab;
    private javax.swing.JLabel avseatslab;
    private javax.swing.JLabel costlab;
    private javax.swing.JLabel depdatelab;
    private javax.swing.JLabel deptimelab;
    private javax.swing.JComboBox<String> destcb;
    private javax.swing.JComboBox<String> foptcb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> sourcecb;
    private javax.swing.JLabel statuslab;
    // End of variables declaration//GEN-END:variables
}
